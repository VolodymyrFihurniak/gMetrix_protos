name: Publication of protos releases

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true
          
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        
      - name: Installing protoc-gen-go and protoc-gen-go-grpc
        run: |
          go install github.com/golang/protobuf/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Generating protos
        run: |
          mkdir -p $GEN_OUT_DIR &&
          protoc -I=$PROTO_DIR \
          --go_out=$GEN_OUT_DIR \
          --go-grpc_out=$GEN_OUT_DIR \
          $(find $PROTO_DIR -type f -name '*.proto')
        env:
          GEN_OUT_DIR: gen/go
          PROTO_DIR: proto
          
      - name: Create release
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          TAG_EXISTS=$(git tag -l "$TAG")
          if [ -z "$TAG_EXISTS" ]; then
            git tag -a $TAG -m "Release $TAG"
            git push origin $TAG
          else
            echo "Tag $TAG already exists. Skipping tag creation."
          fi
        env:
          TAG: ${{ github.ref }}

      - name: Push to GitHub
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

    strategy:
      matrix:
        go-version: [ '1.23.x' ]
